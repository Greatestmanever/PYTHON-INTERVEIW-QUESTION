{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang2057{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 Functions are things that performs actions or calculate outputs for both.\par
Intergers and float are used for mathematical functions i.e calculating things.\par
Strings are used to store characters e.g name, D.O.B, phone no, etc.\par
\par
\ul\b THREE NUMERIC  TYPES IN PYTHON.\par
\ulnone\b0 1    Int    e.g x = 1  \par
2.   Float   e.g y = 2.8 \par
3.   Complex   e.g z = 1j \par
Strings\par
\par
 # the discount price is the result you get after multiplying the actual price with the percentage discount which has been subtracted by 1\par
An f-string helps us embedd variable inside of a string e.g f"hello. (name)". \par
Here, we are able to embedd the variable (name ) inside the string "hello".\par
\par
Intuitively: having the ability to know or understand things without any proof or evidence : having or characterized by intuition. : based on or agreeing with what is known or understood without any proof or evidence \par
What are placeholder variables?\par
They are used for formatting strings. %s acts a placeholder for a string while %d acts as a placeholder for a number. Their associated values are passed in via a tuple using the % operator.\par
\par
name = 'marcog'\par
number = 42 \par
print '%s %d' % (name, number)\par
will print marcog 42. Note that name is a string (%s) and number is an integer (%d for decimal).\par
Intuitively, a placeholder is a pre-formatted container into which content can be placed. By providing pre-set formatting to its content, it places many of the formatting choices in the hands of the template designer while allowing the end-user to concentrate on the actual content.\par
\par
How to Use Placeholders in Python\par
Python\par
\par
\par
In this article, we show how to use placeholders in Python to serve as placeholders for data, such as objects.\par
\par
So if you have a variable in Python or any other type of data type, you can create a placeholder, usually in a print function to reserve a spot for this variable before explicitly saying what the variable is.\par
\par
The best way to see this is in actual code.\par
\par
In the code below, we create 2 variables, desination1 and destination2.\par
\par
We then print out these variables with a print function using placeholders.\par
\par
You'll see exactly how this works below.\par
\par
>>> destination1= "beach"\par
>>> destination2= "park"\par
>>> amount= 3\par
>>> print ("I went to the \{\} and \{\} \{\} times this week". format(destination1, destination2, amount))\par
I went to the beach and park 3 times this week\par
\par
\par
\par
So, the above code is very simple.\par
\par
We create 3 variables.\par
\par
The first variable we create is destination1. We set this variable equal to "beach"\par
\par
The second variable we create is destination2. We set this variable equal to "park"\par
\par
The third variable we create is amount. We set this variable equal to 3.\par
\par
We then create a print statement.\par
\par
Every time you see \{\} in the print statement, this represents a placeholder.\par
\par
What a placeholder does is it holds a place for a variable. When we do the substition, the variable will appear in the place of \{\}.\par
\par
You see this 3 times in the print statement, meaning 3 places for variables are reserved.\par
\par
After we are done with the print statement ending with quotes (either single or double), we put .format(destination1, destination2, amount), representing the 3 variables in order that we want substituted for the placeholders.\par
\par
In the end, this gives us the output statement, " I went to the beach and park 3 times this week"\par
\par
Placeholders are great things to use in Python code especially if you are dealing with different types of data.\par
\par
For example, to create this same method the conventional way without placeholders, we would have the following print line, shown below.\par
\par
>>> print ("I went to the " + destination1 + " and " + destination2 + " " + str(amount) + " times this week")\par
I went to the beach and park 3 times this week\par
\par
\par
\par
You can see what an extreme pain this is.\par
\par
There's a lot of annoyances.\par
\par
One thing is, we have to keep breaking the string apart every time we want to put in a variable.\par
\par
Second, we have to remember to put appropriate spaces between variables, which can be very annoying.\par
\par
Lastly, for strings taking in different data types, such as int, we have to explicitly make the variable a string with the str() function, or else Python will throw an error.\par
\par
So there's a lot of annoyances.\par
\par
With placeholders, all of this foregone.\par
\par
You simply put the placeholder, without any care to the different data types, close the string, put . format() with the names of the variables within the format function, and that is it.\par
\par
So this is just a quick guide on the value of placeholders in Python.\par
F-strings provide a way to embed expressions inside string literals, using a minimal syntax. It should be noted that an f-string is really an expression evaluated at run time, not a constant value. In Python source code, an f-string is a literal string, prefixed with 'f', which contains expressions inside braces.\par
\ul\b NOTE:\ulnone\b0  You cant divide a string by a float or vice-versa.\par
A list is defined by using a square bracket\par
A tuple is defined by a parentheses.\par
You cant add or remove element from a tuple but you can do that for a list.\par
A set is defined by a curly brace. It does not repeat an element.It does not keep to the order unlike list and tuple.\par
\ul\b NOTE:\ulnone\b0  Set doesn't allow you to use subscript notation because they dont follow order.\par
For Example:\par
List= [King, Greatman, Spirit]\par
Tuple = (King, Greatman, Spirit)\par
Set = \{King, Greatman, Spirit\}\par
\par
\b Subscript Notation: The subscript operator is defined as square brackets [] . It is used to access the elements of string, list, tuple, and so on.\par
 \b0 It gives you the element with index zero. Element in programming usually start counting from zero.\par
Tuple. Tuples are used to store multiple items in a single variable. Tuple is one of 4 built-in data types in Python used to store collections of data, the other 3 are List, Set, and Dictionary, all with different qualities and usage. A tuple is a collection which is ordered and unchangeable.\par
\par
\par
\b (MATERIALS NEEDED\par
\b0 2 angle lamp holders (pls buy the one that has both pin and screw) - 500\par
2 screw energy bulb - 2000\par
wall clips - 250\par
2 inches nail - 50\par
1.5mm double wire - 1,800 (approximately 15 yards)\par
\b TOTAL --- 4,600\par
\ul NOTE: \ulnone\b0  The price of the bulb is subjct to change ma if its expensive. awaits your reply madam so i can prepare fully).\par
The Python return statement is a special statement that you can use inside a function or method to send the function's result back to the caller. A return statement consists of the return keyword followed by an optional return value. The return value of a Python function can be any Python object.\par
\b Boolean\b0  is a value that can be either true or false. It can be used in decision making.\par
They are created by using comparision.\par
Example: == means compared to.\par
= means assinged to.\par
\par
SQLAlchemy is a Python SQL toolkit and object relational mapper (ORM) that enables Python to communicate with the SQL database system you prefer:\par
There's a subtle difference between the Python identity operator ( is ) and the equality operator ( == ). The == operator compares the value or equality of two objects, whereas the Python is operator checks whether two variables point to the same object in memory.\par
The abs() function of Python's standard library returns the absolute value of the given number. Absolute value of a number is the value without considering its sign. Hence absolute of 10 is 10, -10 is also 10. If the number is a complex number, abs() returns its magnitude.\par
\b Arbitrary \b0  is the quality of being "determined by chance, whim, or impulse, and not by necessity, reason, or principle". It is also used to refer to a choice made without any specific criterion or restraint. Arbitrary decisions are not necessarily the same as random decisions\par
\b Whim \b0 is a sudden desire or change of mind, especially one that is unusual or unexplained.\par
\b Impulse \b0 is\b  \b0 a sudden strong and unreflective urge or desire to act.\par
\b Criterion \b0 is a principle or standard by which something may be judged or decided.\par
\par
\b FLASK\b0  is a lightweight \b WSGI \b0 web application framework.\par
WSGI - WebServer Gateway Interface\par
}
 